# The CRDs installed by this chart are annotated with "helm.sh/resource-policy: keep", this
# prevents them from being accidentally removed by Helm when this chart is deleted. After
# deleting the installed chart, the user still has to manually remove the remaining CRDs.
crds:
  # The 'x-kubernetes-validations' annotation is not supported in Kubernetes 1.22 and below.
  # This annotation is used by CEL, which is a feature introduced in Kubernetes 1.25 that
  # improves how validation is performed.
  # This option allows to force the 'x-kubernetes-validations' annotation to be excluded,
  # even on Kubernetes 1.25+ clusters.
  forceRemoveValidationAnnotations: false

# -- cert-manager-approver-policy dependency options.
cert-manager-approver-policy:
  nameOverride: cert-manager-approver-policy

  # -- Number of replicas of approver-policy to run.
  replicaCount: 1

  image:
    repository: ${JS_CONTAINER_REGISTRY}/approver-policy-enterprise
    pullPolicy: IfNotPresent
    tag: ${JS_APPROVER_POLICY_ENTERPRISE_IMAGE_VERSION}

  # -- Optional secrets used for pulling the approver-policy container image.
  imagePullSecrets:
  - name: ${JS_DOCKER_REGISTRY_SECRET}

  app:
    # -- Verbosity of approver-policy logging.
    logLevel: 1 # 1-5

    extraArgs:
    - --rego-policy-directory=/var/run/rego

    #- --rego-replicate=networking.k8s.io/v1/ingresses
    #- --rego-replicate=/v1/deployments
    #- --rego-replicate=/v1/services/my-namespace
    - --rego-replicate=

    #- --rego-replicate-cluster=trust.cert-manager.io/v1alpha1/bundles
    #- --rego-replicate-cluster=/v1/namespaces
    - --rego-replicate-cluster=

    # -- List if signer names that approver-policy will be given permission to
    # approve and deny. CertificateRequests referencing these signer names can be
    # processed by approver-policy. See:
    # https://cert-manager.io/docs/concepts/certificaterequest/#approval
    approveSignerNames:
    - "issuers.cert-manager.io/*"
    - "clusterissuers.cert-manager.io/*"
    - "issuers.isolated-issuer.jetstack.io/*"
    - "kmsissuers.cert-manager.skyscanner.net/*"
    - "awspcaissuers.awspca.cert-manager.io/*"
    - "awspcaclusterissuers.awspca.cert-manager.io/*"
    - "venaficlusterissuers.jetstack.io/*"
    - "venafiissuers.jetstack.io/*"

  # -- Volume containing the rego rules.
  volumes:
  - name: rego
    configMap:
      name: cert-manager-approver-policy-rego
      optional: true

  # -- Mount for the policy directory.
  volumeMounts:
  - name: rego
    mountPath: /var/run/rego

  resources: {}
  # -- Kubernetes pod resource limits for approver-policy.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # -- Kubernetes pod memory resource requests for approver-policy.
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

venafiConnection:
  # When set to false, the rendered output does not contain the
  # VenafiConnection CRDs and RBAC. This is usefull for when the
  # Venafi Connection resoures are already installed seperately.
  include: true

# -- approver-policy-rego options.
rego:
  # -- RBAC needed to watch resources.
  rbac:
    # -- Namespace scoped resources.
    namespaced: []
    #- namespace: ""
    #  apiGroup: "networking.k8s.io"
    #  resource: "ingresses"
    #- namespace: ""
    #  apiGroup: ""
    #  resource: "deployments"
    #- namespace: "my-namespace"
    #  apiGroup: ""
    #  resource: "services"

    # -- Cluster scoped resources.
    cluster: []
    #- apiGroup: ""
    #  resource: namespaces
    #- apiGroup: trust.cert-manager.io
    #  resource: bundles