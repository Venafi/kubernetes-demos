apiVersion: policy.cert-manager.io/v1alpha1
kind: CertificateRequestPolicy
metadata:
  name: allow-self-signed-issuer-in-ns-sandbox
spec:
  allowed:
    commonName:
      value: "*"
    dnsNames:
      values: ["*"]
    usages:
      - "signing"
      - "digital signature"
      - "server auth"
    isCA: true
  selector:
    issuerRef:
      name: "selfsigned-issuer"
      kind: "Issuer"
      group: "cert-manager.io"

--- 

apiVersion: policy.cert-manager.io/v1alpha1
kind: CertificateRequestPolicy
metadata:
  name: allow-self-signed-issuer-for-pods-in-ns-sandbox
spec:
  allowed:
    commonName:
      value: "*"
    dnsNames:
      values: ["*"]
    usages:
      - "digital signature"
      - "key encipherment"
    uris:
      values:
      - "spiffe://cluster.local/ns/sandbox/pod/*"
  selector:
    issuerRef:
      name: "ca-issuer"
      kind: "Issuer"
      group: "cert-manager.io"

--- 

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cert-manager-policy-for-selfsigned-certs-in-sandbox
rules:
  - apiGroups: ["policy.cert-manager.io"]
    resources: ["certificaterequestpolicies"]
    verbs: ["use"]
    # Name of the CertificateRequestPolicies to be used.
    resourceNames: ["allow-self-signed-issuer-in-ns-sandbox", "allow-self-signed-issuer-for-pods-in-ns-sandbox"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cert-manager-policy-for-selfsigned-certs-in-sandbox
roleRef:
# ClusterRole or Role _must_ be bound to a user for the policy to be considered.
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cert-manager-policy-for-selfsigned-certs-in-sandbox
subjects:
# The users who should be bound to the policies defined.
- kind: ServiceAccount
  name: cert-manager-csi-driver
  namespace: jetstack-secure
- kind: ServiceAccount
  name: cert-manager
  namespace: jetstack-secure

